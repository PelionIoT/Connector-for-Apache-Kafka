<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright 2021 Pelion Ltd.
  ~
  ~ Licensed under the Apache License, PelionConnectorUtils 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~ http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
  ~ WARRANTIES OF ANY KIND, either express or implied.  See the License for the
  ~ specific language governing permissions and limitations under the License.
  -->
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0
                             http://maven.apache.org/maven-v4_0_0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>com.pelion</groupId>
        <artifactId>kafka-connect-pelion-parent</artifactId>
        <version>1.0.0-SNAPSHOT</version>
    </parent>
    <artifactId>kafka-connect-pelion</artifactId>
    <packaging>jar</packaging>
    <version>1.0.0-SNAPSHOT</version>
    <name>kafka-connect-pelion</name>
    <url>https://pelion.com</url>
    <description>
        A Kafka Connect connector for connecting to Pelion IoT platform.
    </description>

    <developers>
        <developer>
            <organization>Pelion, Inc.</organization>
            <organizationUrl>https://pelion.com</organizationUrl>
        </developer>
    </developers>

    <licenses>
        <license>
            <name>The Apache License, Version 2.0</name>
            <url>https://www.apache.org/licenses/LICENSE-2.0</url>
            <distribution>repo</distribution>
        </license>
    </licenses>
    
    <scm>
        <connection>scm:git:git://github.com/PelionIoT/kafka-connect-pelion.git</connection>
        <developerConnection>scm:git:git@github.com:PelionIoT/kafka-connect-pelion.git</developerConnection>
        <url>https://github.com/PelionIoT/kafka-connect-pelion</url>
        <tag>HEAD</tag>
    </scm>

    <properties>
        <kafka.version>2.7.0</kafka.version>
        <pelion-protobuf-schema.version>1.0.0-SNAPSHOT</pelion-protobuf-schema.version>
        <confluent.version>6.1.0</confluent.version>
        <jackson-databind.version>2.10.5</jackson-databind.version>
        <slf4j.version>1.7.30</slf4j.version>
        <confluent-log4j.version>1.2.17-cp2</confluent-log4j.version>
        <kafka.connect.maven.plugin.version>0.12.0</kafka.connect.maven.plugin.version>
        <maven-compiler-plugin.version>3.8.1</maven-compiler-plugin.version>
        <maven-surefire-plugin.version>3.0.0-M4</maven-surefire-plugin.version>
        <maven-checkstyle-plugin.version>3.1.1</maven-checkstyle-plugin.version>
        <maven-release-plugin.version>2.5.3</maven-release-plugin.version>
        <maven-exec-plugin.version>1.2.1</maven-exec-plugin.version>
        <maven-clean-plugin.version>3.0.0</maven-clean-plugin.version>
        <maven-rpm-maven-plugin.version>2.1.5</maven-rpm-maven-plugin.version>
        <junit.version>4.13.2</junit.version>
        <mockito.version>3.8.0</mockito.version>
        <licenses.name>The Apache License, Version 2.0</licenses.name>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <project.package.home>target/${project.artifactId}-${project.version}-package</project.package.home>
        <java.version>11</java.version>
    </properties>

    <dependencies>
        <dependency>
            <groupId>com.pelion</groupId>
            <artifactId>pelion-protobuf-schema</artifactId>
            <version>${pelion-protobuf-schema.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.kafka</groupId>
            <artifactId>connect-api</artifactId>
            <version>${kafka.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.kafka</groupId>
            <artifactId>connect-runtime</artifactId>
            <version>${kafka.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>io.confluent</groupId>
            <artifactId>kafka-connect-protobuf-converter</artifactId>
            <version>${confluent.version}</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>${jackson-databind.version}</version>
            <scope>provided</scope>
        </dependency>

        <!-- Test dependencies -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <version>${mockito.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
            <version>${slf4j.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.kafka</groupId>
            <artifactId>connect-runtime</artifactId>
            <version>${kafka.version}</version>
            <type>test-jar</type>
            <classifier>test</classifier>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.kafka</groupId>
            <artifactId>kafka_2.13</artifactId>
            <version>${kafka.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.kafka</groupId>
            <artifactId>kafka_2.13</artifactId>
            <version>${kafka.version}</version>
            <type>test-jar</type>
            <classifier>test</classifier>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.kafka</groupId>
            <artifactId>kafka-clients</artifactId>
            <version>${kafka.version}</version>
            <classifier>test</classifier>
            <type>test-jar</type>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven-compiler-plugin.version}</version>
                <inherited>true</inherited>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                    <compilerArgs>
                        <arg>-Xlint:all</arg>
                        <arg>-Werror</arg>
                    </compilerArgs>
                    <encoding>${project.build.sourceEncoding}</encoding>
                </configuration>
            </plugin>
            <plugin>
                <groupId>io.confluent</groupId>
                <artifactId>kafka-connect-maven-plugin</artifactId>
                <version>${kafka.connect.maven.plugin.version}</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>kafka-connect</goal>
                        </goals>
                        <configuration>
                            <title>Kafka Connect Pelion</title>
                            <documentationUrl>
                                https://docs.confluent.io/${project.version}/connect/connect-pelion/docs/index.html
                            </documentationUrl>
                            <description>
                                A Kafka Connect connector for connecting to Pelion IoT platform.
                            </description>
                            <logo>logos/pelion.png</logo>

                            <supportProviderName>Pelion Ltd.</supportProviderName>
                            <supportSummary>Pelion supports the source connector alongside community members as part of
                                its Pelion IoT Platform offering.
                            </supportSummary>
                            <supportUrl>https://www.pelion.com/docs/</supportUrl>
                            <supportLogo>logos/pelion.png</supportLogo>

                            <ownerUsername>pelion</ownerUsername>
                            <ownerType>organization</ownerType>
                            <ownerName>Pelion, Inc.</ownerName>
                            <ownerUrl>https://pelion.com/</ownerUrl>
                            <ownerLogo>logos/pelion.png</ownerLogo>

                            <dockerNamespace>pelion</dockerNamespace>
                            <dockerName>kafka-connect-pelion</dockerName>
                            <dockerTag>${project.version}</dockerTag>

                            <componentTypes>
                                <!--<componentType>sink</componentType>-->
                                <componentType>source</componentType>
                            </componentTypes>

                            <tags>
                                <tag>iot</tag>
                            </tags>

                            <confluentControlCenterIntegration>true</confluentControlCenterIntegration>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${maven-surefire-plugin.version}</version>
                <configuration>
                    <trimStackTrace>false</trimStackTrace>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>${maven-surefire-plugin.version}</version>
                <executions>
                    <execution>
                        <!--normal integration tests should not run the memory-restricted tests -->
                        <id>integration-test</id>
                        <configuration>
                            <excludes>
                                <exclude>**/*OOM*.java</exclude>
                            </excludes>
                            <trimStackTrace>false</trimStackTrace>
                        </configuration>
                    </execution>
                    <execution>
                        <id>integration-test-memory-restricted</id>
                        <goals>
                            <goal>integration-test</goal>
                        </goals>
                        <configuration>
                            <!-- out-of-memory tests should have a restricted heap size-->
                            <argLine>@{argLine} -Djava.awt.headless=true -Xmx128M</argLine>
                            <includes>
                                <include>**/*OOM*.java</include>
                            </includes>
                            <trimStackTrace>false</trimStackTrace>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-assembly-plugin</artifactId>
                <configuration>
                    <descriptors>
                        <descriptor>src/assembly/development.xml</descriptor>
                        <descriptor>src/assembly/package.xml</descriptor>
                    </descriptors>
                </configuration>
                <executions>
                    <execution>
                        <id>make-assembly</id>
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <version>${maven-checkstyle-plugin.version}</version>
                <executions>
                    <execution>
                        <id>validate</id>
                        <phase>validate</phase>
                        <configuration>
                            <configLocation>${basedir}/checkstyle/checkstyle.xml</configLocation>
                            <suppressionsLocation>${basedir}/checkstyle/suppressions.xml</suppressionsLocation>
                        </configuration>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-release-plugin</artifactId>
                <version>${maven-release-plugin.version}</version>
                <configuration>
                    <autoVersionSubmodules>true</autoVersionSubmodules>
                    <remoteTagging>false</remoteTagging>
                    <tagNameFormat>v@{project.version}</tagNameFormat>
                </configuration>
            </plugin>
        </plugins>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
        </resources>
    </build>

    <profiles>
        <profile>
            <id>rpm</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>rpm-maven-plugin</artifactId>
                        <version>${maven-rpm-maven-plugin.version}</version>
                        <executions>
                            <execution>
                                <id>generate-rpm</id>
                                <goals>
                                    <goal>rpm</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <group>Applications/Internet</group>
                            <packager>Pelion Packaging</packager>
                            <license>${licenses.name}</license>
                            <needarch>noarch</needarch>
                            <targetOS>linux</targetOS>
                            <requires>
                                <require>confluent-common = ${confluent.version}</require>
                            </requires>
                            <mappings>
                                <mapping>
                                    <directory>/usr/share/java/${project.artifactId}</directory>
                                    <sources>
                                        <source>
                                            <location>${project.package.home}/share/java/${project.artifactId}
                                            </location>
                                        </source>
                                    </sources>
                                </mapping>
                                <mapping>
                                    <configuration>true</configuration>
                                    <directory>/etc/${project.artifactId}</directory>
                                    <sources>
                                        <source>
                                            <location>${project.package.home}/etc/${project.artifactId}</location>
                                        </source>
                                    </sources>
                                </mapping>
                                <mapping>
                                    <documentation>true</documentation>
                                    <directory>/usr/share/doc/${project.artifactId}</directory>
                                    <sources>
                                        <source>
                                            <location>${project.package.home}/share/doc/${project.artifactId}</location>
                                        </source>
                                    </sources>
                                </mapping>
                            </mappings>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>standalone</id>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-assembly-plugin</artifactId>
                        <configuration>
                            <descriptors>
                                <descriptor>src/assembly/standalone.xml</descriptor>
                            </descriptors>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>licenses-package</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <version>${maven-exec-plugin.version}</version>
                        <executions>
                            <execution>
                                <id>create-licenses</id>
                                <configuration>
                                    <mainClass>io.confluent.licenses.LicenseFinder</mainClass>
                                    <arguments>
                                        <!-- Note use of development instead of package so we pick up all dependencies. -->
                                        <argument>-i
                                            ${project.build.directory}/${project.build.finalName}-package/share/java/kafka-connect-pelion
                                        </argument>
                                        <argument>-o ${project.basedir}/licenses</argument>
                                        <argument>-f</argument>
                                        <argument>-h
                                            ${project.build.directory}/${project.build.finalName}-package/share/doc/kafka-connect-pelion/licenses.html
                                        </argument>
                                        <argument>-l
                                            ${project.build.directory}/${project.build.finalName}-package/share/doc/kafka-connect-pelion/licenses
                                        </argument>
                                        <argument>-n
                                            ${project.build.directory}/${project.build.finalName}-package/share/doc/kafka-connect-pelion/notices
                                        </argument>
                                        <argument>-t ${project.name}</argument>
                                        <argument>-x licenses-${confluent.version}.jar</argument>
                                    </arguments>
                                </configuration>
                                <phase>package</phase>
                                <goals>
                                    <goal>java</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <includeProjectDependencies>true</includeProjectDependencies>
                            <includePluginDependencies>true</includePluginDependencies>
                            <executableDependency>
                                <groupId>io.confluent</groupId>
                                <artifactId>licenses</artifactId>
                            </executableDependency>
                        </configuration>
                        <dependencies>
                            <dependency>
                                <groupId>io.confluent</groupId>
                                <artifactId>licenses</artifactId>
                                <version>${confluent.version}</version>
                            </dependency>
                        </dependencies>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>licenses-source</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <version>${maven-exec-plugin.version}</version>
                        <executions>
                            <execution>
                                <id>create-licenses</id>
                                <configuration>
                                    <mainClass>io.confluent.licenses.LicenseFinder</mainClass>
                                    <arguments>
                                        <!-- Note use of development instead of package so we pick up all dependencies. -->
                                        <argument>-i
                                            ${project.build.directory}/${project.build.finalName}-development/share/java/kafka-connect-pelion
                                        </argument>
                                        <argument>-o ${project.basedir}/licenses</argument>
                                        <argument>-f</argument>
                                        <argument>-h ${project.basedir}/licenses.html</argument>
                                        <argument>-l ${project.basedir}/licenses</argument>
                                        <argument>-n ${project.basedir}/notices</argument>
                                        <argument>-t ${project.name}</argument>
                                        <argument>-x licenses-${confluent.version}.jar</argument>
                                    </arguments>
                                </configuration>
                                <phase>package</phase>
                                <goals>
                                    <goal>java</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <includeProjectDependencies>true</includeProjectDependencies>
                            <includePluginDependencies>true</includePluginDependencies>
                            <executableDependency>
                                <groupId>io.confluent</groupId>
                                <artifactId>licenses</artifactId>
                            </executableDependency>
                        </configuration>
                        <dependencies>
                            <dependency>
                                <groupId>io.confluent</groupId>
                                <artifactId>licenses</artifactId>
                                <version>${confluent.version}</version>
                            </dependency>
                        </dependencies>
                    </plugin>
                    <plugin>
                        <artifactId>maven-clean-plugin</artifactId>
                        <version>${maven-clean-plugin.version}</version>
                        <configuration>
                            <filesets>
                                <fileset>
                                    <directory>.</directory>
                                    <includes>
                                        <include>licenses.html</include>
                                        <directory>licenses/*.*</directory>
                                        <directory>notices/*.*</directory>
                                    </includes>
                                    <excludes>
                                        <!-- We have to manually keep this files until the license finder properly finds the Oracle license -->
                                        <!-- <exclude>licenses/LICENSE-ojdbc*.txt</exclude> -->
                                    </excludes>
                                </fileset>
                            </filesets>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

    <repositories>
        <repository>
            <id>confluent</id>
            <name>Confluent</name>
            <url>http://packages.confluent.io/maven/</url>
        </repository>
    </repositories>

</project>
